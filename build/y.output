Terminals unused in grammar

    SHR
    BAN
    BOR
    BNT
    BXO
    ADD
    SUB
    MUL
    DIV
    REM
    NOT
    GTR
    LES
    GEQ
    LEQ
    EQL
    NEQ
    LAN
    LOR
    ADD_ASSIGN
    SUB_ASSIGN
    MUL_ASSIGN
    DIV_ASSIGN
    REM_ASSIGN
    BAN_ASSIGN
    BOR_ASSIGN
    BXO_ASSIGN
    SHR_ASSIGN
    SHL_ASSIGN
    INC_ASSIGN
    DEC_ASSIGN
    IF
    ELSE
    BOOL_LIT


Grammar

    0 $accept: Program $end

    1 $@1: ε

    2 Program: $@1 GlobalStmtList
    3        | ε

    4 GlobalStmtList: GlobalStmtList GlobalStmt
    5               | GlobalStmt

    6 GlobalStmt: DefineVariableStmt
    7           | FunctionDefStmt

    8 DefineVariableStmt: VARIABLE_T IDENT VAL_ASSIGN Expression ';'

    9 $@2: ε

   10 FunctionDefStmt: VARIABLE_T IDENT '(' FunctionParameterStmtList ')' $@2 '{' StmtList '}'

   11 FunctionParameterStmtList: FunctionParameterStmtList ',' FunctionParameterStmt
   12                          | FunctionParameterStmt
   13                          | ε

   14 FunctionParameterStmt: VARIABLE_T IDENT

   15 StmtList: StmtList Stmt
   16         | Stmt

   17 Stmt: Value
   18     | RETURN Value ';'
   19     | COUT CoutParmList ';'
   20     | FOR '(' Expression ';' Expression ';' Expression ')' Stmt
   21     | WHILE '(' Expression ')' Stmt
   22     | BREAK ';'
   23     | CONTINUE ';'

   24 Value: Expression
   25      | ';'

   26 CoutParmList: CoutParm
   27             | CoutParmList SHL CoutParm

   28 CoutParm: Expression

   29 Expression: IDENT
   30           | INT_LIT
   31           | STR_LIT
   32           | FLOAT_LIT


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 10 20 21
    ')' (41) 10 20 21
    ',' (44) 11
    ';' (59) 8 18 19 20 22 23 25
    '{' (123) 10
    '}' (125) 10
    error (256)
    COUT (258) 19
    SHR (259)
    SHL (260) 27
    BAN (261)
    BOR (262)
    BNT (263)
    BXO (264)
    ADD (265)
    SUB (266)
    MUL (267)
    DIV (268)
    REM (269)
    NOT (270)
    GTR (271)
    LES (272)
    GEQ (273)
    LEQ (274)
    EQL (275)
    NEQ (276)
    LAN (277)
    LOR (278)
    VAL_ASSIGN (279) 8
    ADD_ASSIGN (280)
    SUB_ASSIGN (281)
    MUL_ASSIGN (282)
    DIV_ASSIGN (283)
    REM_ASSIGN (284)
    BAN_ASSIGN (285)
    BOR_ASSIGN (286)
    BXO_ASSIGN (287)
    SHR_ASSIGN (288)
    SHL_ASSIGN (289)
    INC_ASSIGN (290)
    DEC_ASSIGN (291)
    IF (292)
    ELSE (293)
    FOR (294) 20
    WHILE (295) 21
    RETURN (296) 18
    BREAK (297) 22
    CONTINUE (298) 23
    VARIABLE_T <var_type> (299) 8 10 14
    IDENT <s_var> (300) 8 10 14 29
    INT_LIT <i_var> (301) 30
    STR_LIT <s_var> (302) 31
    BOOL_LIT <b_var> (303)
    FLOAT_LIT <f_var> (304) 32


Nonterminals, with rules where they appear

    $accept (56)
        on left: 0
    Program (57)
        on left: 2 3
        on right: 0
    $@1 (58)
        on left: 1
        on right: 2
    GlobalStmtList (59)
        on left: 4 5
        on right: 2 4
    GlobalStmt (60)
        on left: 6 7
        on right: 4 5
    DefineVariableStmt (61)
        on left: 8
        on right: 6
    FunctionDefStmt (62)
        on left: 10
        on right: 7
    $@2 (63)
        on left: 9
        on right: 10
    FunctionParameterStmtList (64)
        on left: 11 12 13
        on right: 10 11
    FunctionParameterStmt (65)
        on left: 14
        on right: 11 12
    StmtList <object_val> (66)
        on left: 15 16
        on right: 10 15
    Stmt <object_val> (67)
        on left: 17 18 19 20 21 22 23
        on right: 15 16 20 21
    Value (68)
        on left: 24 25
        on right: 17 18
    CoutParmList <object_val> (69)
        on left: 26 27
        on right: 19 27
    CoutParm <object_val> (70)
        on left: 28
        on right: 26 27
    Expression <object_val> (71)
        on left: 29 30 31 32
        on right: 8 20 21 24 28


State 0

    0 $accept: • Program $end

    $end      reduce using rule 3 (Program)
    $default  reduce using rule 1 ($@1)

    Program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: Program • $end

    $end  shift, and go to state 3


State 2

    2 Program: $@1 • GlobalStmtList

    VARIABLE_T  shift, and go to state 4

    GlobalStmtList      go to state 5
    GlobalStmt          go to state 6
    DefineVariableStmt  go to state 7
    FunctionDefStmt     go to state 8


State 3

    0 $accept: Program $end •

    $default  accept


State 4

    8 DefineVariableStmt: VARIABLE_T • IDENT VAL_ASSIGN Expression ';'
   10 FunctionDefStmt: VARIABLE_T • IDENT '(' FunctionParameterStmtList ')' $@2 '{' StmtList '}'

    IDENT  shift, and go to state 9


State 5

    2 Program: $@1 GlobalStmtList •
    4 GlobalStmtList: GlobalStmtList • GlobalStmt

    VARIABLE_T  shift, and go to state 4

    $default  reduce using rule 2 (Program)

    GlobalStmt          go to state 10
    DefineVariableStmt  go to state 7
    FunctionDefStmt     go to state 8


State 6

    5 GlobalStmtList: GlobalStmt •

    $default  reduce using rule 5 (GlobalStmtList)


State 7

    6 GlobalStmt: DefineVariableStmt •

    $default  reduce using rule 6 (GlobalStmt)


State 8

    7 GlobalStmt: FunctionDefStmt •

    $default  reduce using rule 7 (GlobalStmt)


State 9

    8 DefineVariableStmt: VARIABLE_T IDENT • VAL_ASSIGN Expression ';'
   10 FunctionDefStmt: VARIABLE_T IDENT • '(' FunctionParameterStmtList ')' $@2 '{' StmtList '}'

    VAL_ASSIGN  shift, and go to state 11
    '('         shift, and go to state 12


State 10

    4 GlobalStmtList: GlobalStmtList GlobalStmt •

    $default  reduce using rule 4 (GlobalStmtList)


State 11

    8 DefineVariableStmt: VARIABLE_T IDENT VAL_ASSIGN • Expression ';'

    IDENT      shift, and go to state 13
    INT_LIT    shift, and go to state 14
    STR_LIT    shift, and go to state 15
    FLOAT_LIT  shift, and go to state 16

    Expression  go to state 17


State 12

   10 FunctionDefStmt: VARIABLE_T IDENT '(' • FunctionParameterStmtList ')' $@2 '{' StmtList '}'

    VARIABLE_T  shift, and go to state 18

    $default  reduce using rule 13 (FunctionParameterStmtList)

    FunctionParameterStmtList  go to state 19
    FunctionParameterStmt      go to state 20


State 13

   29 Expression: IDENT •

    $default  reduce using rule 29 (Expression)


State 14

   30 Expression: INT_LIT •

    $default  reduce using rule 30 (Expression)


State 15

   31 Expression: STR_LIT •

    $default  reduce using rule 31 (Expression)


State 16

   32 Expression: FLOAT_LIT •

    $default  reduce using rule 32 (Expression)


State 17

    8 DefineVariableStmt: VARIABLE_T IDENT VAL_ASSIGN Expression • ';'

    ';'  shift, and go to state 21


State 18

   14 FunctionParameterStmt: VARIABLE_T • IDENT

    IDENT  shift, and go to state 22


State 19

   10 FunctionDefStmt: VARIABLE_T IDENT '(' FunctionParameterStmtList • ')' $@2 '{' StmtList '}'
   11 FunctionParameterStmtList: FunctionParameterStmtList • ',' FunctionParameterStmt

    ')'  shift, and go to state 23
    ','  shift, and go to state 24


State 20

   12 FunctionParameterStmtList: FunctionParameterStmt •

    $default  reduce using rule 12 (FunctionParameterStmtList)


State 21

    8 DefineVariableStmt: VARIABLE_T IDENT VAL_ASSIGN Expression ';' •

    $default  reduce using rule 8 (DefineVariableStmt)


State 22

   14 FunctionParameterStmt: VARIABLE_T IDENT •

    $default  reduce using rule 14 (FunctionParameterStmt)


State 23

   10 FunctionDefStmt: VARIABLE_T IDENT '(' FunctionParameterStmtList ')' • $@2 '{' StmtList '}'

    $default  reduce using rule 9 ($@2)

    $@2  go to state 25


State 24

   11 FunctionParameterStmtList: FunctionParameterStmtList ',' • FunctionParameterStmt

    VARIABLE_T  shift, and go to state 18

    FunctionParameterStmt  go to state 26


State 25

   10 FunctionDefStmt: VARIABLE_T IDENT '(' FunctionParameterStmtList ')' $@2 • '{' StmtList '}'

    '{'  shift, and go to state 27


State 26

   11 FunctionParameterStmtList: FunctionParameterStmtList ',' FunctionParameterStmt •

    $default  reduce using rule 11 (FunctionParameterStmtList)


State 27

   10 FunctionDefStmt: VARIABLE_T IDENT '(' FunctionParameterStmtList ')' $@2 '{' • StmtList '}'

    COUT       shift, and go to state 28
    FOR        shift, and go to state 29
    WHILE      shift, and go to state 30
    RETURN     shift, and go to state 31
    BREAK      shift, and go to state 32
    CONTINUE   shift, and go to state 33
    IDENT      shift, and go to state 13
    INT_LIT    shift, and go to state 14
    STR_LIT    shift, and go to state 15
    FLOAT_LIT  shift, and go to state 16
    ';'        shift, and go to state 34

    StmtList    go to state 35
    Stmt        go to state 36
    Value       go to state 37
    Expression  go to state 38


State 28

   19 Stmt: COUT • CoutParmList ';'

    IDENT      shift, and go to state 13
    INT_LIT    shift, and go to state 14
    STR_LIT    shift, and go to state 15
    FLOAT_LIT  shift, and go to state 16

    CoutParmList  go to state 39
    CoutParm      go to state 40
    Expression    go to state 41


State 29

   20 Stmt: FOR • '(' Expression ';' Expression ';' Expression ')' Stmt

    '('  shift, and go to state 42


State 30

   21 Stmt: WHILE • '(' Expression ')' Stmt

    '('  shift, and go to state 43


State 31

   18 Stmt: RETURN • Value ';'

    IDENT      shift, and go to state 13
    INT_LIT    shift, and go to state 14
    STR_LIT    shift, and go to state 15
    FLOAT_LIT  shift, and go to state 16
    ';'        shift, and go to state 34

    Value       go to state 44
    Expression  go to state 38


State 32

   22 Stmt: BREAK • ';'

    ';'  shift, and go to state 45


State 33

   23 Stmt: CONTINUE • ';'

    ';'  shift, and go to state 46


State 34

   25 Value: ';' •

    $default  reduce using rule 25 (Value)


State 35

   10 FunctionDefStmt: VARIABLE_T IDENT '(' FunctionParameterStmtList ')' $@2 '{' StmtList • '}'
   15 StmtList: StmtList • Stmt

    COUT       shift, and go to state 28
    FOR        shift, and go to state 29
    WHILE      shift, and go to state 30
    RETURN     shift, and go to state 31
    BREAK      shift, and go to state 32
    CONTINUE   shift, and go to state 33
    IDENT      shift, and go to state 13
    INT_LIT    shift, and go to state 14
    STR_LIT    shift, and go to state 15
    FLOAT_LIT  shift, and go to state 16
    ';'        shift, and go to state 34
    '}'        shift, and go to state 47

    Stmt        go to state 48
    Value       go to state 37
    Expression  go to state 38


State 36

   16 StmtList: Stmt •

    $default  reduce using rule 16 (StmtList)


State 37

   17 Stmt: Value •

    $default  reduce using rule 17 (Stmt)


State 38

   24 Value: Expression •

    $default  reduce using rule 24 (Value)


State 39

   19 Stmt: COUT CoutParmList • ';'
   27 CoutParmList: CoutParmList • SHL CoutParm

    SHL  shift, and go to state 49
    ';'  shift, and go to state 50


State 40

   26 CoutParmList: CoutParm •

    $default  reduce using rule 26 (CoutParmList)


State 41

   28 CoutParm: Expression •

    $default  reduce using rule 28 (CoutParm)


State 42

   20 Stmt: FOR '(' • Expression ';' Expression ';' Expression ')' Stmt

    IDENT      shift, and go to state 13
    INT_LIT    shift, and go to state 14
    STR_LIT    shift, and go to state 15
    FLOAT_LIT  shift, and go to state 16

    Expression  go to state 51


State 43

   21 Stmt: WHILE '(' • Expression ')' Stmt

    IDENT      shift, and go to state 13
    INT_LIT    shift, and go to state 14
    STR_LIT    shift, and go to state 15
    FLOAT_LIT  shift, and go to state 16

    Expression  go to state 52


State 44

   18 Stmt: RETURN Value • ';'

    ';'  shift, and go to state 53


State 45

   22 Stmt: BREAK ';' •

    $default  reduce using rule 22 (Stmt)


State 46

   23 Stmt: CONTINUE ';' •

    $default  reduce using rule 23 (Stmt)


State 47

   10 FunctionDefStmt: VARIABLE_T IDENT '(' FunctionParameterStmtList ')' $@2 '{' StmtList '}' •

    $default  reduce using rule 10 (FunctionDefStmt)


State 48

   15 StmtList: StmtList Stmt •

    $default  reduce using rule 15 (StmtList)


State 49

   27 CoutParmList: CoutParmList SHL • CoutParm

    IDENT      shift, and go to state 13
    INT_LIT    shift, and go to state 14
    STR_LIT    shift, and go to state 15
    FLOAT_LIT  shift, and go to state 16

    CoutParm    go to state 54
    Expression  go to state 41


State 50

   19 Stmt: COUT CoutParmList ';' •

    $default  reduce using rule 19 (Stmt)


State 51

   20 Stmt: FOR '(' Expression • ';' Expression ';' Expression ')' Stmt

    ';'  shift, and go to state 55


State 52

   21 Stmt: WHILE '(' Expression • ')' Stmt

    ')'  shift, and go to state 56


State 53

   18 Stmt: RETURN Value ';' •

    $default  reduce using rule 18 (Stmt)


State 54

   27 CoutParmList: CoutParmList SHL CoutParm •

    $default  reduce using rule 27 (CoutParmList)


State 55

   20 Stmt: FOR '(' Expression ';' • Expression ';' Expression ')' Stmt

    IDENT      shift, and go to state 13
    INT_LIT    shift, and go to state 14
    STR_LIT    shift, and go to state 15
    FLOAT_LIT  shift, and go to state 16

    Expression  go to state 57


State 56

   21 Stmt: WHILE '(' Expression ')' • Stmt

    COUT       shift, and go to state 28
    FOR        shift, and go to state 29
    WHILE      shift, and go to state 30
    RETURN     shift, and go to state 31
    BREAK      shift, and go to state 32
    CONTINUE   shift, and go to state 33
    IDENT      shift, and go to state 13
    INT_LIT    shift, and go to state 14
    STR_LIT    shift, and go to state 15
    FLOAT_LIT  shift, and go to state 16
    ';'        shift, and go to state 34

    Stmt        go to state 58
    Value       go to state 37
    Expression  go to state 38


State 57

   20 Stmt: FOR '(' Expression ';' Expression • ';' Expression ')' Stmt

    ';'  shift, and go to state 59


State 58

   21 Stmt: WHILE '(' Expression ')' Stmt •

    $default  reduce using rule 21 (Stmt)


State 59

   20 Stmt: FOR '(' Expression ';' Expression ';' • Expression ')' Stmt

    IDENT      shift, and go to state 13
    INT_LIT    shift, and go to state 14
    STR_LIT    shift, and go to state 15
    FLOAT_LIT  shift, and go to state 16

    Expression  go to state 60


State 60

   20 Stmt: FOR '(' Expression ';' Expression ';' Expression • ')' Stmt

    ')'  shift, and go to state 61


State 61

   20 Stmt: FOR '(' Expression ';' Expression ';' Expression ')' • Stmt

    COUT       shift, and go to state 28
    FOR        shift, and go to state 29
    WHILE      shift, and go to state 30
    RETURN     shift, and go to state 31
    BREAK      shift, and go to state 32
    CONTINUE   shift, and go to state 33
    IDENT      shift, and go to state 13
    INT_LIT    shift, and go to state 14
    STR_LIT    shift, and go to state 15
    FLOAT_LIT  shift, and go to state 16
    ';'        shift, and go to state 34

    Stmt        go to state 62
    Value       go to state 37
    Expression  go to state 38


State 62

   20 Stmt: FOR '(' Expression ';' Expression ';' Expression ')' Stmt •

    $default  reduce using rule 20 (Stmt)
